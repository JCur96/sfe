geom_sf(mapping = aes(alpha = 0.5, fill='blue'), data = egForPlot , show.legend = F) +
geom_sf(mapping = aes(alpha = 0.1, fill = "red"), data = IUCNForPlot, show.legend = F) +
coord_sf(xlim = xlim, ylim = ylim, expand = T)  +
#labs(tag = 'a') +
theme(plot.margin=grid::unit(c(0,0,0,0), "mm")) +
theme_bw()
print(p)
NHM_Pangolins <- read.csv("../data/NHMPangolinsCompatability.csv", header=T)
IUCN <- inReadOld(path = '../data', name = 'maps_pholidota')
NHM_Pangolins <- prepNHMData(NHM_Pangolins, 6)
# To prove that this has done what we want, we could view the first ten rows
# but to save you from reading an output, I'll just tell you that
# it's not quite ready yet as it still contains a lot of missing values.
# Filtering out records which don't have a decade should help.
# We also don't really need all the notes at the moment, so we can drop that column
NHM_Pangolins <- NHM_Pangolins %>% filter(Decade != is.na(Decade))
NHM_Pangolins <- NHM_Pangolins %>% select(-c(NOTES))
IUCN <- prepIUCNData(IUCN)
NHM_Pangolins <- matchBinomial(NHM_Pangolins, IUCN)
NHM_Pangolins <- fixTypeNames(NHM_Pangolins)
NHM_Pangolins$Extent..m. <- (NHM_Pangolins$Extent..m. /1000)
NHM_Pangolins <- NHM_Pangolins %>% rename(Extent_km = Extent..m.)
# Here I make a plot to demonstrate how the NHM has been using georeferenced
# specimens
egForPlot <-NHM_Pangolins %>% filter(binomial == 'Smutsia_gigantea')
IUCNForPlot <- IUCN %>% filter(binomial == 'Smutsia_gigantea')
bbox <- c(-14.414063,-37.996163,53.613281,27.994401)
xlim <- c(bbox[1], bbox[3])
ylim <- c(bbox[2], bbox[4])
landMap <- rnaturalearth::ne_countries(returnclass = 'sf') %>%
st_union()
p = ggplot(data = landMap) +
geom_sf() +
geom_sf(mapping = aes(alpha = 0.5, fill='blue'), size = 3, data = egForPlot , show.legend = F) +
geom_sf(mapping = aes(alpha = 0.1, fill = 'red'), data = IUCNForPlot, show.legend = F) +
coord_sf(xlim = xlim, ylim = ylim, expand = T) +
theme_bw()
print(p)
ggsave('../output/figure1.png', p, 'png')
dotsForPlot <- NHM_Pangolins$geometry
# I then add error to the plot
NHM_Pangolins <- addError(NHM_Pangolins)
# head(NHM_Pangolins)
# Here is an example of a single plot from that command, or how to plot just one
# graph that is of interest
egForPlot <-NHM_Pangolins %>% filter(binomial == 'Smutsia_gigantea')
IUCNForPlot <- IUCN %>% filter(binomial == 'Smutsia_gigantea')
# puts the coords into the order expected down in ggmap coords
bbox <- c(-14.414063,-37.996163,53.613281,27.994401)
xlim <- c(bbox[1], bbox[3])
ylim <- c(bbox[2], bbox[4])
landMap <- rnaturalearth::ne_countries(returnclass = 'sf') %>%
st_union()
p = ggplot(data = landMap) +
geom_sf() +
geom_sf(mapping = aes(alpha = 0.5, fill = 'black'), size = 2, data = dotsForPlot, show.legend = F) +
geom_sf(mapping = aes(alpha = 0.5, fill='blue'), data = egForPlot , show.legend = F) +
geom_sf(mapping = aes(alpha = 0.1, fill = "red"), data = IUCNForPlot, show.legend = F) +
coord_sf(xlim = xlim, ylim = ylim, expand = T)  +
#labs(tag = 'a') +
theme(plot.margin=grid::unit(c(0,0,0,0), "mm")) +
theme_bw()
print(p)
NHM_Pangolins <- read.csv("../data/NHMPangolinsCompatability.csv", header=T)
IUCN <- inReadOld(path = '../data', name = 'maps_pholidota')
NHM_Pangolins <- prepNHMData(NHM_Pangolins, 6)
# To prove that this has done what we want, we could view the first ten rows
# but to save you from reading an output, I'll just tell you that
# it's not quite ready yet as it still contains a lot of missing values.
# Filtering out records which don't have a decade should help.
# We also don't really need all the notes at the moment, so we can drop that column
NHM_Pangolins <- NHM_Pangolins %>% filter(Decade != is.na(Decade))
NHM_Pangolins <- NHM_Pangolins %>% select(-c(NOTES))
IUCN <- prepIUCNData(IUCN)
NHM_Pangolins <- matchBinomial(NHM_Pangolins, IUCN)
NHM_Pangolins <- fixTypeNames(NHM_Pangolins)
NHM_Pangolins$Extent..m. <- (NHM_Pangolins$Extent..m. /1000)
NHM_Pangolins <- NHM_Pangolins %>% rename(Extent_km = Extent..m.)
# Here I make a plot to demonstrate how the NHM has been using georeferenced
# specimens
egForPlot <-NHM_Pangolins %>% filter(binomial == 'Smutsia_gigantea')
IUCNForPlot <- IUCN %>% filter(binomial == 'Smutsia_gigantea')
bbox <- c(-14.414063,-37.996163,53.613281,27.994401)
xlim <- c(bbox[1], bbox[3])
ylim <- c(bbox[2], bbox[4])
landMap <- rnaturalearth::ne_countries(returnclass = 'sf') %>%
st_union()
p = ggplot(data = landMap) +
geom_sf() +
geom_sf(mapping = aes(alpha = 0.5, fill='blue'), size = 3, data = egForPlot , show.legend = F) +
geom_sf(mapping = aes(alpha = 0.1, fill = 'red'), data = IUCNForPlot, show.legend = F) +
coord_sf(xlim = xlim, ylim = ylim, expand = T) +
theme_bw()
print(p)
ggsave('../output/figure1.png', p, 'png')
dotsForPlot <- egForPlot$geometry
# I then add error to the plot
NHM_Pangolins <- addError(NHM_Pangolins)
# head(NHM_Pangolins)
# This function plots maps, but does not display them, it plots and saves them
# in a pre-made destination folder which you are prompted to enter the path to
# when you run this function. This both saves computer time and memory, whilst
# allowing you as the user to browse all the maps at your leisure.
plotMaps(NHM_Pangolins, IUCN, path = '../output/point_radius_graphs/')
# Here is an example of a single plot from that command, or how to plot just one
# graph that is of interest
egForPlot <-NHM_Pangolins %>% filter(binomial == 'Smutsia_gigantea')
IUCNForPlot <- IUCN %>% filter(binomial == 'Smutsia_gigantea')
# puts the coords into the order expected down in ggmap coords
bbox <- c(-14.414063,-37.996163,53.613281,27.994401)
xlim <- c(bbox[1], bbox[3])
ylim <- c(bbox[2], bbox[4])
landMap <- rnaturalearth::ne_countries(returnclass = 'sf') %>%
st_union()
p = ggplot(data = landMap) +
geom_sf() +
geom_sf(mapping = aes(alpha = 0.5, fill = 'black'), size = 2, data = dotsForPlot, show.legend = F) +
geom_sf(mapping = aes(alpha = 0.5, fill='blue'), data = egForPlot , show.legend = F) +
geom_sf(mapping = aes(alpha = 0.1, fill = "red"), data = IUCNForPlot, show.legend = F) +
coord_sf(xlim = xlim, ylim = ylim, expand = T)  +
#labs(tag = 'a') +
theme(plot.margin=grid::unit(c(0,0,0,0), "mm")) +
theme_bw()
print(p)
ggsave('../output/figure4a.png', p, 'png')
# This function plots maps, but does not display them, it plots and saves them
# in a pre-made destination folder which you are prompted to enter the path to
# when you run this function. This both saves computer time and memory, whilst
# allowing you as the user to browse all the maps at your leisure.
plotMaps(NHM_Pangolins, IUCN, path = '../output/point_radius_graphs/')
# Here is an example of a single plot from that command, or how to plot just one
# graph that is of interest
egForPlot <-NHM_Pangolins %>% filter(binomial == 'Smutsia_gigantea')
IUCNForPlot <- IUCN %>% filter(binomial == 'Smutsia_gigantea')
# puts the coords into the order expected down in ggmap coords
bbox <- c(-14.414063,-37.996163,53.613281,27.994401)
xlim <- c(bbox[1], bbox[3])
ylim <- c(bbox[2], bbox[4])
landMap <- rnaturalearth::ne_countries(returnclass = 'sf') %>%
st_union()
p = ggplot(data = landMap) +
geom_sf() +
geom_sf(mapping = aes(alpha = 0.5, fill='blue'), data = egForPlot , show.legend = F) +
geom_sf(mapping = aes(alpha = 0.1, fill = "red"), data = IUCNForPlot, show.legend = F) +
geom_sf(mapping = aes(alpha = 0.5, fill = 'black'), size = 2, data = dotsForPlot, show.legend = F) +
coord_sf(xlim = xlim, ylim = ylim, expand = T)  +
#labs(tag = 'a') +
theme(plot.margin=grid::unit(c(0,0,0,0), "mm")) +
theme_bw()
print(p)
ggsave('../output/figure4a.png', p, 'png')
# This function plots maps, but does not display them, it plots and saves them
# in a pre-made destination folder which you are prompted to enter the path to
# when you run this function. This both saves computer time and memory, whilst
# allowing you as the user to browse all the maps at your leisure.
plotMaps(NHM_Pangolins, IUCN, path = '../output/point_radius_graphs/')
# Here is an example of a single plot from that command, or how to plot just one
# graph that is of interest
egForPlot <-NHM_Pangolins %>% filter(binomial == 'Smutsia_gigantea')
IUCNForPlot <- IUCN %>% filter(binomial == 'Smutsia_gigantea')
# puts the coords into the order expected down in ggmap coords
bbox <- c(-14.414063,-37.996163,53.613281,27.994401)
xlim <- c(bbox[1], bbox[3])
ylim <- c(bbox[2], bbox[4])
landMap <- rnaturalearth::ne_countries(returnclass = 'sf') %>%
st_union()
p = ggplot(data = landMap) +
geom_sf() +
geom_sf(mapping = aes(alpha = 0.5, fill='blue'), data = egForPlot , show.legend = F) +
geom_sf(mapping = aes(alpha = 0.1, fill = "red"), data = IUCNForPlot, show.legend = F) +
geom_sf(mapping = aes(alpha = 0.5, fill = 'black'), data = dotsForPlot, show.legend = F) +
coord_sf(xlim = xlim, ylim = ylim, expand = T)  +
#labs(tag = 'a') +
theme(plot.margin=grid::unit(c(0,0,0,0), "mm")) +
theme_bw()
print(p)
ggsave('../output/figure4a.png', p, 'png')
# This function plots maps, but does not display them, it plots and saves them
# in a pre-made destination folder which you are prompted to enter the path to
# when you run this function. This both saves computer time and memory, whilst
# allowing you as the user to browse all the maps at your leisure.
plotMaps(NHM_Pangolins, IUCN, path = '../output/point_radius_graphs/')
# Here is an example of a single plot from that command, or how to plot just one
# graph that is of interest
egForPlot <-NHM_Pangolins %>% filter(binomial == 'Smutsia_gigantea')
IUCNForPlot <- IUCN %>% filter(binomial == 'Smutsia_gigantea')
# puts the coords into the order expected down in ggmap coords
bbox <- c(-14.414063,-37.996163,53.613281,27.994401)
xlim <- c(bbox[1], bbox[3])
ylim <- c(bbox[2], bbox[4])
landMap <- rnaturalearth::ne_countries(returnclass = 'sf') %>%
st_union()
p = ggplot(data = landMap) +
geom_sf() +
geom_sf(mapping = aes(alpha = 0.5, fill='blue'), data = egForPlot , show.legend = F) +
geom_sf(mapping = aes(alpha = 0.1, fill = "red"), data = IUCNForPlot, show.legend = F) +
# geom_sf(mapping = aes(alpha = 0.5, fill = 'black'), data = dotsForPlot, show.legend = F) +
coord_sf(xlim = xlim, ylim = ylim, expand = T)  +
#labs(tag = 'a') +
theme(plot.margin=grid::unit(c(0,0,0,0), "mm")) +
theme_bw()
print(p)
ggsave('../output/figure4a.png', p, 'png')
# I then add error to the plot
NHM_Pangolins <- addError(NHM_Pangolins)
# Here is an example of a single plot from that command, or how to plot just one
# graph that is of interest
egForPlot <-NHM_Pangolins %>% filter(binomial == 'Smutsia_gigantea')
IUCNForPlot <- IUCN %>% filter(binomial == 'Smutsia_gigantea')
# puts the coords into the order expected down in ggmap coords
bbox <- c(-14.414063,-37.996163,53.613281,27.994401)
xlim <- c(bbox[1], bbox[3])
ylim <- c(bbox[2], bbox[4])
landMap <- rnaturalearth::ne_countries(returnclass = 'sf') %>%
st_union()
print(p)
NHM_Pangolins <- read.csv("../data/NHMPangolinsCompatability.csv", header=T)
IUCN <- inReadOld(path = '../data', name = 'maps_pholidota')
NHM_Pangolins <- prepNHMData(NHM_Pangolins, 6)
# To prove that this has done what we want, we could view the first ten rows
# but to save you from reading an output, I'll just tell you that
# it's not quite ready yet as it still contains a lot of missing values.
# Filtering out records which don't have a decade should help.
# We also don't really need all the notes at the moment, so we can drop that column
NHM_Pangolins <- NHM_Pangolins %>% filter(Decade != is.na(Decade))
NHM_Pangolins <- NHM_Pangolins %>% select(-c(NOTES))
IUCN <- prepIUCNData(IUCN)
NHM_Pangolins <- matchBinomial(NHM_Pangolins, IUCN)
NHM_Pangolins <- fixTypeNames(NHM_Pangolins)
View(NHM_Pangolins)
NHM_Pangolins$Extent..m. <- (NHM_Pangolins$Extent..m. /1000)
NHM_Pangolins <- NHM_Pangolins %>% rename(Extent_km = Extent..m.)
# Here I make a plot to demonstrate how the NHM has been using georeferenced
# specimens
egForPlot <-NHM_Pangolins %>% filter(binomial == 'Smutsia_gigantea')
IUCNForPlot <- IUCN %>% filter(binomial == 'Smutsia_gigantea')
bbox <- c(-14.414063,-37.996163,53.613281,27.994401)
xlim <- c(bbox[1], bbox[3])
ylim <- c(bbox[2], bbox[4])
landMap <- rnaturalearth::ne_countries(returnclass = 'sf') %>%
st_union()
p = ggplot(data = landMap) +
geom_sf() +
geom_sf(mapping = aes(alpha = 0.5, fill='blue'), size = 3, data = egForPlot , show.legend = F) +
geom_sf(mapping = aes(alpha = 0.1, fill = 'red'), data = IUCNForPlot, show.legend = F) +
coord_sf(xlim = xlim, ylim = ylim, expand = T) +
theme_bw()
print(p)
ggsave('../output/figure1.png', p, 'png')
dotsForPlot <- egForPlot$geometry
# I then add error to the plot
NHM_Pangolins <- addError(NHM_Pangolins)
# head(NHM_Pangolins)
# head(NHM_Pangolins)
View(NHM_Pangolins)
# This function plots maps, but does not display them, it plots and saves them
# in a pre-made destination folder which you are prompted to enter the path to
# when you run this function. This both saves computer time and memory, whilst
# allowing you as the user to browse all the maps at your leisure.
plotMaps(NHM_Pangolins, IUCN, path = '../output/point_radius_graphs/')
# Here is an example of a single plot from that command, or how to plot just one
# graph that is of interest
egForPlot <-NHM_Pangolins %>% filter(binomial == 'Smutsia_gigantea')
IUCNForPlot <- IUCN %>% filter(binomial == 'Smutsia_gigantea')
# puts the coords into the order expected down in ggmap coords
bbox <- c(-14.414063,-37.996163,53.613281,27.994401)
xlim <- c(bbox[1], bbox[3])
ylim <- c(bbox[2], bbox[4])
landMap <- rnaturalearth::ne_countries(returnclass = 'sf') %>%
st_union()
p = ggplot(data = landMap) +
geom_sf() +
geom_sf(mapping = aes(alpha = 0.5, fill='blue'), data = egForPlot , show.legend = F) +
geom_sf(mapping = aes(alpha = 0.1, fill = "red"), data = IUCNForPlot, show.legend = F) +
# geom_sf(mapping = aes(alpha = 0.5, fill = 'black'), data = dotsForPlot, show.legend = F) +
coord_sf(xlim = xlim, ylim = ylim, expand = T)  +
#labs(tag = 'a') +
theme(plot.margin=grid::unit(c(0,0,0,0), "mm")) +
theme_bw()
print(p)
ggsave('../output/figure4a.png', p, 'png')
# This function plots maps, but does not display them, it plots and saves them
# in a pre-made destination folder which you are prompted to enter the path to
# when you run this function. This both saves computer time and memory, whilst
# allowing you as the user to browse all the maps at your leisure.
plotMaps(NHM_Pangolins, IUCN, path = '../output/point_radius_graphs/')
# Here is an example of a single plot from that command, or how to plot just one
# graph that is of interest
egForPlot <-NHM_Pangolins %>% filter(binomial == 'Smutsia_gigantea')
IUCNForPlot <- IUCN %>% filter(binomial == 'Smutsia_gigantea')
# puts the coords into the order expected down in ggmap coords
bbox <- c(-14.414063,-37.996163,53.613281,27.994401)
xlim <- c(bbox[1], bbox[3])
ylim <- c(bbox[2], bbox[4])
landMap <- rnaturalearth::ne_countries(returnclass = 'sf') %>%
st_union()
p = ggplot(data = landMap) +
geom_sf() +
geom_sf(mapping = aes(alpha = 0.5, fill='blue'), data = egForPlot , show.legend = F) +
geom_sf(mapping = aes(alpha = 0.1, fill = "red"), data = IUCNForPlot, show.legend = F) +
geom_sf(mapping = aes(alpha = 0.5, fill = 'black'), data = dotsForPlot, show.legend = F) +
coord_sf(xlim = xlim, ylim = ylim, expand = T)  +
#labs(tag = 'a') +
theme(plot.margin=grid::unit(c(0,0,0,0), "mm")) +
theme_bw()
print(p)
ggsave('../output/figure4a.png', p, 'png')
# Here is an example of a single plot from that command, or how to plot just one
# graph that is of interest
egForPlot <-NHM_Pangolins %>% filter(binomial == 'Smutsia_gigantea')
IUCNForPlot <- IUCN %>% filter(binomial == 'Smutsia_gigantea')
# puts the coords into the order expected down in ggmap coords
bbox <- c(-14.414063,-37.996163,53.613281,27.994401)
xlim <- c(bbox[1], bbox[3])
ylim <- c(bbox[2], bbox[4])
landMap <- rnaturalearth::ne_countries(returnclass = 'sf') %>%
st_union()
print(p)
ggsave('../output/figure4a.png', p, 'png')
library(sfe)
library(rgeos)
library(rgdal)
library(ggplot2)
library(Hmisc)
# First it is advisable that you check if you've got the data already
sfe::mydata_versions()
# If not, you can check what versions are available on GitHub
sfe::mydata_versions(local=F)
# From those you can choose the version you wish to work with
myFakePangolinData <- sfe::mydata(version = '0.0.0.9001')
# Once you've made any edits to the data you can upload it to version control
sfe::updateVersion()
NHM_Pangolins <- read.csv("./data/NHMPangolinsCompatability.csv", header=T)
IUCN <- inReadOld(path = './data', name = 'maps_pholidota')
NHM_Pangolins <- prepNHMData(NHM_Pangolins, 6)
# To prove that this has done what we want, we could view the first ten rows
# but to save you from reading an output, I'll just tell you that
# it's not quite ready yet as it still contains a lot of missing values.
# Filtering out records which don't have a decade should help.
# We also don't really need all the notes at the moment, so we can drop that column
NHM_Pangolins <- NHM_Pangolins %>% filter(Decade != is.na(Decade))
NHM_Pangolins <- NHM_Pangolins %>% select(-c(NOTES))
IUCN <- prepIUCNData(IUCN)
NHM_Pangolins <- matchBinomial(NHM_Pangolins, IUCN)
NHM_Pangolins <- fixTypeNames(NHM_Pangolins)
NHM_Pangolins$Extent..m. <- (NHM_Pangolins$Extent..m. /1000)
NHM_Pangolins <- NHM_Pangolins %>% rename(Extent_km = Extent..m.)
# Here I make a plot to demonstrate how the NHM has been using georeferenced
# specimens
egForPlot <-NHM_Pangolins %>% filter(binomial == 'Smutsia_temminckii')
IUCNForPlot <- IUCN %>% filter(binomial == 'Smutsia_temminckii')
bbox <- c(-14.414063,-37.996163,53.613281,27.994401)
xlim <- c(bbox[1], bbox[3])
ylim <- c(bbox[2], bbox[4])
landMap <- rnaturalearth::ne_countries(returnclass = 'sf') %>%
st_union()
p = ggplot(data = landMap) +
geom_sf() +
geom_sf(mapping = aes(alpha = 0.5, fill='blue'), data = egForPlot , show.legend = F) +
geom_sf(mapping = aes(alpha = 0.1, fill = "red"), data = IUCNForPlot, show.legend = F) +
coord_sf(xlim = xlim, ylim = ylim, expand = T) +
theme_bw()
print(p)
ggsave('../output/figure1.pdf', p, 'pdf')
# This function plots maps, but does not display them, it plots and saves them
# in a pre-made destination folder which you are prompted to enter the path to
# when you run this function. This both saves computer time and memory, whilst
# allowing you as the user to browse all the maps at your leisure.
plotMaps(NHM_Pangolins, IUCN, path = '../output/point_radius_graphs/')
# This function plots maps, but does not display them, it plots and saves them
# in a pre-made destination folder which you are prompted to enter the path to
# when you run this function. This both saves computer time and memory, whilst
# allowing you as the user to browse all the maps at your leisure.
plotMaps(NHM_Pangolins, IUCN, path = '../output/point_radius_graphs/')
NHM_Pangolins$Extent..m. <- (NHM_Pangolins$Extent..m. /1000)
NHM_Pangolins <- read.csv("./data/NHMPangolinsCompatability.csv", header=T)
IUCN <- inReadOld(path = './data', name = 'maps_pholidota')
NHM_Pangolins <- prepNHMData(NHM_Pangolins, 6)
# To prove that this has done what we want, we could view the first ten rows
# but to save you from reading an output, I'll just tell you that
# it's not quite ready yet as it still contains a lot of missing values.
# Filtering out records which don't have a decade should help.
# We also don't really need all the notes at the moment, so we can drop that column
NHM_Pangolins <- NHM_Pangolins %>% filter(Decade != is.na(Decade))
NHM_Pangolins <- NHM_Pangolins %>% select(-c(NOTES))
IUCN <- prepIUCNData(IUCN)
NHM_Pangolins <- matchBinomial(NHM_Pangolins, IUCN)
NHM_Pangolins$Extent..m. <- (NHM_Pangolins$Extent..m. /1000)
NHM_Pangolins <- NHM_Pangolins %>% rename(Extent_km = Extent..m.)
# Here I make a plot to demonstrate how the NHM has been using georeferenced
# specimens
egForPlot <-NHM_Pangolins %>% filter(binomial == 'Smutsia_temminckii')
IUCNForPlot <- IUCN %>% filter(binomial == 'Smutsia_temminckii')
bbox <- c(-14.414063,-37.996163,53.613281,27.994401)
xlim <- c(bbox[1], bbox[3])
ylim <- c(bbox[2], bbox[4])
landMap <- rnaturalearth::ne_countries(returnclass = 'sf') %>%
st_union()
p = ggplot(data = landMap) +
geom_sf() +
geom_sf(mapping = aes(alpha = 0.5, fill='blue'), data = egForPlot , show.legend = F) +
geom_sf(mapping = aes(alpha = 0.1, fill = "red"), data = IUCNForPlot, show.legend = F) +
coord_sf(xlim = xlim, ylim = ylim, expand = T) +
theme_bw()
print(p)
ggsave('../output/figure1.pdf', p, 'pdf')
# I then add error to the plot
NHM_Pangolins <- addError(NHM_Pangolins)
# This function plots maps, but does not display them, it plots and saves them
# in a pre-made destination folder which you are prompted to enter the path to
# when you run this function. This both saves computer time and memory, whilst
# allowing you as the user to browse all the maps at your leisure.
plotMaps(NHM_Pangolins, IUCN, path = '../output/point_radius_graphs/')
library(sfe)
library(rgeos)
library(rgdal)
library(ggplot2)
library(Hmisc)
library(sfe)
library(rgeos)
library(rgdal)
library(ggplot2)
library(Hmisc)
library(sfe)
library(rgeos)
library(rgdal)
library(ggplot2)
library(Hmisc)
NHM_Pangolins <- read.csv("./data/NHMPangolinsCompatability.csv", header=T)
IUCN <- inReadOld(path = './data', name = 'maps_pholidota')
NHM_Pangolins <- prepNHMData(NHM_Pangolins, 6)
# To prove that this has done what we want, we could view the first ten rows
# but to save you from reading an output, I'll just tell you that
# it's not quite ready yet as it still contains a lot of missing values.
# Filtering out records which don't have a decade should help.
# We also don't really need all the notes at the moment, so we can drop that column
NHM_Pangolins <- NHM_Pangolins %>% filter(Decade != is.na(Decade))
NHM_Pangolins <- NHM_Pangolins %>% select(-c(NOTES))
IUCN <- prepIUCNData(IUCN)
NHM_Pangolins <- matchBinomial(NHM_Pangolins, IUCN)
NHM_Pangolins$Extent..m. <- (NHM_Pangolins$Extent..m. /1000)
NHM_Pangolins <- NHM_Pangolins %>% rename(Extent_km = Extent..m.)
# Here I make a plot to demonstrate how the NHM has been using georeferenced
# specimens
egForPlot <-NHM_Pangolins %>% filter(binomial == 'Smutsia_temminckii')
IUCNForPlot <- IUCN %>% filter(binomial == 'Smutsia_temminckii')
bbox <- c(-14.414063,-37.996163,53.613281,27.994401)
xlim <- c(bbox[1], bbox[3])
ylim <- c(bbox[2], bbox[4])
landMap <- rnaturalearth::ne_countries(returnclass = 'sf') %>%
st_union()
p = ggplot(data = landMap) +
geom_sf() +
geom_sf(mapping = aes(alpha = 0.5, fill='blue'), data = egForPlot , show.legend = F) +
geom_sf(mapping = aes(alpha = 0.1, fill = "red"), data = IUCNForPlot, show.legend = F) +
coord_sf(xlim = xlim, ylim = ylim, expand = T) +
theme_bw()
print(p)
ggsave('../output/figure1.pdf', p, 'pdf')
getwd()
ggsave('../output/figure1.pdf', p, 'pdf')
# I then add error to the plot
NHM_Pangolins <- addError(NHM_Pangolins)
# head(NHM_Pangolins)
ggsave('../output/figure1.pdf', p, 'pdf')
NHM_Pangolins <- read.csv("./data/NHMPangolinsCompatability.csv", header=T)
IUCN <- inReadOld(path = './data', name = 'maps_pholidota')
NHM_Pangolins <- prepNHMData(NHM_Pangolins, 6)
# To prove that this has done what we want, we could view the first ten rows
# but to save you from reading an output, I'll just tell you that
# it's not quite ready yet as it still contains a lot of missing values.
# Filtering out records which don't have a decade should help.
# We also don't really need all the notes at the moment, so we can drop that column
NHM_Pangolins <- NHM_Pangolins %>% filter(Decade != is.na(Decade))
NHM_Pangolins <- NHM_Pangolins %>% select(-c(NOTES))
IUCN <- prepIUCNData(IUCN)
NHM_Pangolins <- matchBinomial(NHM_Pangolins, IUCN)
NHM_Pangolins <- fixTypeNames(NHM_Pangolins)
NHM_Pangolins$Extent..m. <- (NHM_Pangolins$Extent..m. /1000)
NHM_Pangolins <- NHM_Pangolins %>% rename(Extent_km = Extent..m.)
# Here I make a plot to demonstrate how the NHM has been using georeferenced
# specimens
egForPlot <-NHM_Pangolins %>% filter(binomial == 'Smutsia_temminckii')
IUCNForPlot <- IUCN %>% filter(binomial == 'Smutsia_temminckii')
bbox <- c(-14.414063,-37.996163,53.613281,27.994401)
xlim <- c(bbox[1], bbox[3])
ylim <- c(bbox[2], bbox[4])
landMap <- rnaturalearth::ne_countries(returnclass = 'sf') %>%
st_union()
p = ggplot(data = landMap) +
geom_sf() +
geom_sf(mapping = aes(alpha = 0.5, fill='blue'), data = egForPlot , show.legend = F) +
geom_sf(mapping = aes(alpha = 0.1, fill = "red"), data = IUCNForPlot, show.legend = F) +
coord_sf(xlim = xlim, ylim = ylim, expand = T) +
theme_bw()
print(p)
ggsave('../output/figure1.pdf', p, 'pdf')
ggsave('../output/figure1.pdf', p, 'pdf')
# I then add error to the plot
NHM_Pangolins <- addError(NHM_Pangolins)
ggsave('../output/figure1.pdf', p, 'pdf')
?grDevices
install.packages(c("backports", "BH", "broom", "callr", "classInt", "cli", "clipr", "cubature", "curl", "data.table", "DBI", "devtools", "digest", "e1071", "ellipsis", "farver", "ggforce", "ggplot2", "haven", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httr", "jpeg", "knitr", "lmerTest", "maptools", "markdown", "modelr", "openssl", "pkgbuild", "pkgconfig", "plyr", "processx", "purrr", "R6", "Rcpp", "RcppEigen", "rgdal", "rgeos", "RgoogleMaps", "rlang", "rmarkdown", "roxygen2", "rvest", "scales", "selectr", "sf", "sp", "sys", "testthat", "tidyr", "tidyverse", "tinytex", "units", "whisker", "xfun", "xml2"))
install.packages("sp")
install.packages("sp")
library(ggplot2)
# load libraries
library(raster)
library(rgdal)
library(ggplot2)
library(rgdal)
library(ggplot2)
